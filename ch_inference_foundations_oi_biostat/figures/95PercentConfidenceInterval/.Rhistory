border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 135000,
col = '#00000011',
border = '#00000000')
histPlot(means,
col = COL[1],
#breaks = seq(130,200, length.out = 5),
add = TRUE)
abline(h = 0)
axis(1, at = seq(140, 190, 5))
axis(2, at = seq(0, 20000, 2000))
par(las = 1, mar = c(4, 4, 1.4, 1))
q <- c(seq(0.00001, 0.0009, 0.00001),
seq(0.001, 0.999, 0.0001),
seq(0.9991, 0.99999, 0.00001))
ms <- quantile(means, q)
nq <- qnorm(q)
plot(nq, ms,
xlab = "",
ylab = 'Sample means',
main = '',
col = COL[1],
axes = FALSE)
mtext("Theoretical quantiles", 1, 2)
axis(1)
axis(2, seq(140, 190, 10))
box()
dev.off()
setwd("~/Dropbox/working_files/open_intro/oi_biostat/data_working_dir/R_code/ch4_inference_oi_biostat/cdcWeight1000SampDist")
# graph of sampling distribution
# border not right
library(openintro)
data(COL)
set.seed(5)
means <- c()
for (i in 1:1000) {
these <- sample(nrow(cdc), 60)
means[i] <- mean(cdc$weight[these], na.rm = TRUE)
}
myPDF('cdcWeight1000SampDist.pdf', 6.5, 3.2,
mar = c(3.5, 3.5, 0.7, 0.7),
mgp = c(2.3, 0.6, 0))
plot(0, 0,
type = 'n',
xlim = c(150,190),
ylim = c(0, 100),
xlab = 'Sample mean',
ylab = 'Frequency',
axes = FALSE)
m <- mean(cdc$weight, na.rm = TRUE)
s <- sd(cdc$weight, na.rm = TRUE) / sqrt(60)
rect(m - s / 100, 0,
m + s / 100, 1500,
col = '#00000044',
border = '#00000000')
rect(m - s, 0,
m + s, 1500,
col = '#00000011',
border = '#00000000')
rect(m - 2 * s, 0,
m + 2 * s, 1500,
col = '#00000011',
border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 1500,
col = '#00000011',
border = '#00000000')
histPlot(means, col = COL[1], breaks = 25, add = TRUE)
abline(h = 0)
axis(1, at = seq(150, 190, 5))
at <- seq(150, 190, 1.0)
axis(1, at, rep("", length(at)), tcl = -0.1)
axis(2, at = seq(0, 100, 20))
dev.off()
require(openintro)
data(COL)
set.seed(5)
N     <- 100000
means <- rep(0, N)
pb <- txtProgressBar(0, N, style = 3)
for (i in 1:N) {
tmp <- sample(nrow(cdc), 60)
tmp <- tmp[!is.na(tmp)][1:60]
means[i] <- mean(cdc$weight[tmp], na.rm = TRUE)
setTxtProgressBar(pb, i)
}
myPDF('cdcWeightBigSampDist.pdf', 8, 3.15,
mar = c(3.3, 4, 1.4, 1),
mgp = c(2.7,0.55,0))
layout(matrix(1:2, 1),
c(4.3, 3))
plot(0, 0,
type = 'n',
xlim = c(150, 190),
ylim = c(0,15000),
#     ylim = c(0, 3000 * N / 25000),
xlab = '',
ylab = '',
axes = FALSE)
mtext("Sample Mean", 1, 2)
mtext("Frequency", 2, line = 3, las = 0)
m <- mean(cdc$weight, na.rm = TRUE)
s <- sd(cdc$weight, na.rm = TRUE) / sqrt(60)
rect(m - s / 100, 0,
m + s / 100, 1350,
col = '#00000044',
border = '#00000000')
rect(m - s, 0,
m + s, 135000,
col = '#00000011',
border = '#00000000')
rect(m - 2 * s, 0,
m + 2 * s, 135000,
col = '#00000011',
border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 135000,
col = '#00000011',
border = '#00000000')
histPlot(means,
col = COL[1],
breaks = 25,
#breaks = seq(130,200, length.out = 5),
add = TRUE)
abline(h = 0)
axis(1, at = seq(140, 190, 5))
axis(2, at = seq(0, 20000, 2000))
par(las = 1, mar = c(4, 4, 1.4, 1))
q <- c(seq(0.00001, 0.0009, 0.00001),
seq(0.001, 0.999, 0.0001),
seq(0.9991, 0.99999, 0.00001))
ms <- quantile(means, q)
nq <- qnorm(q)
plot(nq, ms,
xlab = "",
ylab = 'Sample means',
main = '',
col = COL[1],
axes = FALSE)
mtext("Theoretical quantiles", 1, 2)
axis(1)
axis(2, seq(140, 190, 10))
box()
dev.off()
require(openintro)
data(COL)
set.seed(5)
N     <- 100000
means <- rep(0, N)
pb <- txtProgressBar(0, N, style = 3)
for (i in 1:N) {
tmp <- sample(nrow(cdc), 60)
tmp <- tmp[!is.na(tmp)][1:60]
means[i] <- mean(cdc$weight[tmp], na.rm = TRUE)
setTxtProgressBar(pb, i)
}
myPDF('cdcWeightBigSampDist.pdf', 8, 3.15,
mar = c(3.3, 4, 1.4, 1),
mgp = c(2.7,0.55,0))
layout(matrix(1:2, 1),
c(4.3, 3))
plot(0, 0,
type = 'n',
xlim = c(150, 190),
ylim = c(0,15000),
#     ylim = c(0, 3000 * N / 25000),
xlab = '',
ylab = '',
axes = FALSE)
mtext("Sample Mean", 1, 2)
mtext("Frequency", 2, line = 3, las = 0)
m <- mean(cdc$weight, na.rm = TRUE)
s <- sd(cdc$weight, na.rm = TRUE) / sqrt(60)
rect(m - s / 100, 0,
m + s / 100, 1350,
col = '#00000044',
border = '#00000000')
rect(m - s, 0,
m + s, 135000,
col = '#00000011',
border = '#00000000')
rect(m - 2 * s, 0,
m + 2 * s, 135000,
col = '#00000011',
border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 135000,
col = '#00000011',
border = '#00000000')
histPlot(means,
col = COL[1],
breaks = 25,
#breaks = seq(130,200, length.out = 5),
add = TRUE)
abline(h = 0)
axis(1, at = seq(140, 190, 5))
axis(2, at = seq(0, 20000, 2000))
par(las = 1, mar = c(4, 4, 1.4, 1))
q <- c(seq(0.00001, 0.0009, 0.00001),
seq(0.001, 0.999, 0.0001),
seq(0.9991, 0.99999, 0.00001))
ms <- quantile(means, q)
nq <- qnorm(q)
plot(nq, ms,
xlab = "",
ylab = 'Sample means',
main = '',
col = COL[1],
axes = FALSE)
mtext("Theoretical quantiles", 1, 2)
axis(1)
axis(2, seq(140, 190, 10))
box()
dev.off()
setwd("~/Dropbox/working_files/open_intro/oi_biostat/data_working_dir/R_code/ch4_inference_oi_biostat/cdcWeight1000SampDist")
# graph of sampling distribution
# border not right
library(openintro)
data(COL)
set.seed(5)
means <- c()
for (i in 1:1000) {
these <- sample(nrow(cdc), 60)
means[i] <- mean(cdc$weight[these], na.rm = TRUE)
}
myPDF('cdcWeight1000SampDist.pdf', 6.5, 3.2,
mar = c(3.5, 3.5, 0.7, 0.7),
mgp = c(2.3, 0.6, 0))
plot(0, 0,
type = 'n',
xlim = c(150,190),
ylim = c(0, 100),
xlab = 'Sample mean',
ylab = 'Frequency',
axes = FALSE)
m <- mean(cdc$weight, na.rm = TRUE)
s <- sd(cdc$weight, na.rm = TRUE) / sqrt(60)
rect(m - s / 100, 0,
m + s / 100, 1500,
col = '#00000044',
border = '#00000000')
rect(m - s, 0,
m + s, 1500,
col = '#00000011',
border = '#00000000')
rect(m - 2 * s, 0,
m + 2 * s, 1500,
col = '#00000011',
border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 1500,
col = '#00000011',
border = '#00000000')
histPlot(means, col = COL[1], breaks = 25, add = TRUE)
abline(h = 0)
axis(1, at = seq(150, 190, 5))
#at <- seq(150, 190, 1.0)
axis(1, at, rep("", length(at)), tcl = -0.1)
axis(2, at = seq(0, 100, 20))
dev.off()
# graph of sampling distribution
# border not right
library(openintro)
data(COL)
set.seed(5)
means <- c()
for (i in 1:1000) {
these <- sample(nrow(cdc), 60)
means[i] <- mean(cdc$weight[these], na.rm = TRUE)
}
myPDF('cdcWeight1000SampDist.pdf', 6.5, 3.2,
mar = c(3.5, 3.5, 0.7, 0.7),
mgp = c(2.3, 0.6, 0))
plot(0, 0,
type = 'n',
xlim = c(150,190),
ylim = c(0, 100),
xlab = 'Sample mean',
ylab = 'Frequency',
axes = FALSE)
m <- mean(cdc$weight, na.rm = TRUE)
s <- sd(cdc$weight, na.rm = TRUE) / sqrt(60)
rect(m - s / 100, 0,
m + s / 100, 1500,
col = '#00000044',
border = '#00000000')
rect(m - s, 0,
m + s, 1500,
col = '#00000011',
border = '#00000000')
rect(m - 2 * s, 0,
m + 2 * s, 1500,
col = '#00000011',
border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 1500,
col = '#00000011',
border = '#00000000')
histPlot(means, col = COL[1], breaks = 25, add = TRUE)
abline(h = 0)
axis(1, at = seq(150, 190, 5))
#at <- seq(150, 190, 1.0)
#axis(1, at, rep("", length(at)), tcl = -0.1)
axis(1, at = seq(150, 190, 5))
axis(2, at = seq(0, 100, 20))
dev.off()
require(openintro)
data(COL)
set.seed(5)
N     <- 100000
means <- rep(0, N)
pb <- txtProgressBar(0, N, style = 3)
for (i in 1:N) {
tmp <- sample(nrow(cdc), 60)
tmp <- tmp[!is.na(tmp)][1:60]
means[i] <- mean(cdc$weight[tmp], na.rm = TRUE)
setTxtProgressBar(pb, i)
}
myPDF('cdcWeightBigSampDist.pdf', 8, 3.15,
mar = c(3.3, 4, 1.4, 1),
mgp = c(2.7,0.55,0))
layout(matrix(1:2, 1),
c(4.3, 3))
plot(0, 0,
type = 'n',
xlim = c(150, 190),
ylim = c(0,15000),
#     ylim = c(0, 3000 * N / 25000),
xlab = '',
ylab = '',
axes = FALSE)
mtext("Sample Mean", 1, 2)
mtext("Frequency", 2, line = 3, las = 0)
m <- mean(cdc$weight, na.rm = TRUE)
s <- sd(cdc$weight, na.rm = TRUE) / sqrt(60)
rect(m - s / 100, 0,
m + s / 100, 1350,
col = '#00000044',
border = '#00000000')
rect(m - s, 0,
m + s, 135000,
col = '#00000011',
border = '#00000000')
rect(m - 2 * s, 0,
m + 2 * s, 135000,
col = '#00000011',
border = '#00000000')
rect(m - 3 * s, 0,
m + 3 * s, 135000,
col = '#00000011',
border = '#00000000')
histPlot(means,
col = COL[1],
breaks = 50,
#breaks = seq(130,200, length.out = 5),
add = TRUE)
abline(h = 0)
axis(1, at = seq(140, 190, 5))
axis(2, at = seq(0, 20000, 2000))
par(las = 1, mar = c(4, 4, 1.4, 1))
q <- c(seq(0.00001, 0.0009, 0.00001),
seq(0.001, 0.999, 0.0001),
seq(0.9991, 0.99999, 0.00001))
ms <- quantile(means, q)
nq <- qnorm(q)
plot(nq, ms,
xlab = "",
ylab = 'Sample means',
main = '',
col = COL[1],
axes = FALSE)
mtext("Theoretical quantiles", 1, 2)
axis(1)
axis(2, seq(140, 190, 10))
box()
dev.off()
setwd("~/Dropbox/working_files/open_intro/oi_biostat/data_working_dir/R_code/ch4_inference_oi_biostat/95PercentConfidenceInterval")
mean(cdc$weight)
# graphs of confidence intervals for weight
library(openintro)
data(COL)
myPDF('95PercentConfidenceInterval.pdf', 6, 3.4,
mar = c(1.7, 1, 0, 1),
mgp = c(2.7, 0.7, 0))
m <- mean(cdc$weight)
s <- sd(cdc$weight)
n <- 60
k <- 25
SE <- s/sqrt(n)
set.seed(12)
means <- c()
SE    <- c()
for(i in 1:k){
temp <- sample(nrow(cdc), n)
d    <- cdc$weight[temp]
means[i] <- mean(d, na.rm = TRUE)
SE[i]    <- sd(d)/sqrt(n)
}
xR <- m + 4 * c(-1, 1) * s / sqrt(n)
yR <- c(0.7, 25.3)
plot(xR, yR,
type = 'n',
xlab = '',
ylab = '',
axes = FALSE)
abline(v = m, lty = 2, col = COL[5,2])
axis(1, at = m, expression(mu*' = 169.7' ))
for(i in 1:k){
ci <- means[i] + 2 * c(-1, 1) * SE[i]
if(abs(means[i] - m) > 1.96 * SE[i]){
col <- COL[4]
points(means[i], i, cex = 1.4, col = col)
lines(ci, rep(i, 2), col = col, lwd = 4)
} else {
col <- COL[1]
}
points(means[i], i, pch = 20, cex = 1.2, col = col)
lines(ci, rep(i, 2), col = col)
}
dev.off()
mean(cdc$weight)
# graphs of confidence intervals for weight
library(openintro)
data(COL)
myPDF('95PercentConfidenceInterval.pdf', 6, 3.4,
mar = c(1.7, 1, 0, 1),
mgp = c(2.7, 0.7, 0))
m <- mean(cdc$weight)
s <- sd(cdc$weight)
n <- 60
k <- 25
SE <- s/sqrt(n)
set.seed(15)
means <- c()
SE    <- c()
for(i in 1:k){
temp <- sample(nrow(cdc), n)
d    <- cdc$weight[temp]
means[i] <- mean(d, na.rm = TRUE)
SE[i]    <- sd(d)/sqrt(n)
}
xR <- m + 4 * c(-1, 1) * s / sqrt(n)
yR <- c(0.7, 25.3)
plot(xR, yR,
type = 'n',
xlab = '',
ylab = '',
axes = FALSE)
abline(v = m, lty = 2, col = COL[5,2])
axis(1, at = m, expression(mu*' = 169.7' ))
for(i in 1:k){
ci <- means[i] + 2 * c(-1, 1) * SE[i]
if(abs(means[i] - m) > 1.96 * SE[i]){
col <- COL[4]
points(means[i], i, cex = 1.4, col = col)
lines(ci, rep(i, 2), col = col, lwd = 4)
} else {
col <- COL[1]
}
points(means[i], i, pch = 20, cex = 1.2, col = col)
lines(ci, rep(i, 2), col = col)
}
dev.off()
# calculations for confidence intervals
# first overall weight
summary(cdc.samp$weight)
sd(cdc.samp$weight)
x.bar = mean(cdc.samp$weight)
s = sd(cdc.samp$weight)
n = nrow(cdc.samp)
std.error = s/sqrt(n)
std.error
margin.error <- qnorm(0.975)*s/sqrt(n)
lcb = x.bar - margin.error
ucb = x.bar + margin.error
lcb
ucb
male = cdc.samp$gender == "m"
female = cdc.samp$gender == "f"
x.bar = mean(cdc.samp$weight[male])
x.bar
s = sd(cdc.samp$weight[male])
s
n = nrow(cdc.samp[male,])
n
margin.error <- qnorm(0.975)*s/sqrt(n)
lcb = x.bar - margin.error
ucb = x.bar + margin.error
lcb
ucb
x.bar = mean(cdc.samp$weight[female])
x.bar
s = sd(cdc.samp$weight[female])
s
n = nrow(cdc.samp[female,])
n
margin.error <- qnorm(0.975)*s/sqrt(n)
lcb = x.bar - margin.error
ucb = x.bar + margin.error
lcb
ucb
summary(cdc$weight)
summary(cdc$wtdesire)
summary(cdc$weight - cdc$wtdesire)
sd(cdc$weight - cdc$wtdesire)
weight.desired.difference = cdc.samp$weight - cdc$wtdesire
hist(weight.desired.difference)
t.test(weight.desired.difference, mu = 0)
weight.desired.difference = cdc.samp$weight - cdc.samp$wtdesire
hist(weight.desired.difference)
t.test(weight.desired.difference, mu = 0)
